#include <iostream>
#include <fstream>
#include <string>
using namespace std;

struct Student {
    int rollNo;
    string name;
    string division;
    string address;
};

void addStudent() {
    ofstream file;
    file.open("students.txt", ios::app);

    Student s;
    cout << "Enter Roll Number: ";
    cin >> s.rollNo;
    cin.ignore();  // To clear the input buffer
    cout << "Enter Name: ";
    getline(cin, s.name);
    cout << "Enter Division: ";
    getline(cin, s.division);
    cout << "Enter Address: ";
    getline(cin, s.address);

    file << s.rollNo << "\n" << s.name << "\n" << s.division << "\n" << s.address << "\n\n";
    file.close();
    cout << "Student record added successfully.\n";
}

void deleteStudent() {
    ifstream file("students.txt");
    ofstream temp("temp.txt");

    int rollNoToDelete;
    cout << "Enter Roll Number of student to delete: ";
    cin >> rollNoToDelete;

    bool found = false;
    Student s;
    while (file >> s.rollNo) {
        file.ignore();  // Ignore the newline after roll number
        getline(file, s.name);
        getline(file, s.division);
        getline(file, s.address);

        if (s.rollNo != rollNoToDelete) {
            temp << s.rollNo << "\n" << s.name << "\n" << s.division << "\n" << s.address << "\n\n";
        } else {
            found = true;
        }
    }

    file.close();
    temp.close();
    remove("students.txt");
    rename("temp.txt", "students.txt");

    if (found) {
        cout << "Student record deleted successfully.\n";
    } else {
        cout << "Student record with Roll Number " << rollNoToDelete << " not found.\n";
    }
}

void displayStudent() {
    ifstream file("students.txt");

    int rollNoToSearch;
    cout << "Enter Roll Number to search: ";
    cin >> rollNoToSearch;

    bool found = false;
    Student s;
    while (file >> s.rollNo) {
        file.ignore();  // Ignore the newline after roll number
        getline(file, s.name);
        getline(file, s.division);
        getline(file, s.address);

        if (s.rollNo == rollNoToSearch) {
            found = true;
            cout << "\nStudent Details:\n";
            cout << "Roll No: " << s.rollNo << endl;
            cout << "Name: " << s.name << endl;
            cout << "Division: " << s.division << endl;
            cout << "Address: " << s.address << endl;
            break;
        }
    }

    if (!found) {
        cout << "Student record with Roll Number " << rollNoToSearch << " not found.\n";
    }

    file.close();
}

int main() {
    int choice;

    do {
        cout << "\nStudent Database Menu\n";
        cout << "1. Add Student\n";
        cout << "2. Delete Student\n";
        cout << "3. Display Student\n";
        cout << "4. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                addStudent();
                break;
            case 2:
                deleteStudent();
                break;
            case 3:
                displayStudent();
                break;
            case 4:
                cout << "Exiting program.\n";
                break;
            default:
                cout << "Invalid choice. Please try again.\n";
        }
    } while (choice != 4);

    return 0;
}
